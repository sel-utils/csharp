/*
 * This file was automatically generated by sel-utils and
 * released under the MIT License.
 * 
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 */
using System.IO;

namespace Utils
{

    public class Buffer
    {

        private BinaryWriter writer;
        private BinaryReader reader;

        public Buffer(BinaryWriter writer)
        {
            this.writer = writer;
        }

        public Buffer(BinaryReader reader)
        {
            this.reader = reader;
        }

        public void WriteBool(bool value)
        {
            writer.WriteBoolean(value);
        }

        public void WriteByte(sbyte value)
        {
            writer.WriteSByte(value);
        }

        public void WriteUbyte(byte value)
        {
            writer.WriteByte(value);
        }

        //

        public bool ReadBool()
        {
            return reader.ReadBoolean();
        }

        public sbyte ReadByte()
        {
            return reader.readSByte();
        }

        public byte readUbyte()
        {
            return reader.readByte();
        }

        //

        public static Buffer Writer()
        {
            return new Buffer(new BinaryWriter(new MemoryStream()));
        }

        public static Buffer Reader(byte[] _buffer)
        {
            return new Buffer(new BinaryReader(new MemoryStream(_buffer)));
        }

    }

}
