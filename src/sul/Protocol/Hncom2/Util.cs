/*
 * This file was automatically generated by sel-utils and
 * released under the MIT License.
 * 
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/hncom2.xml
 */
using Types = sul.Hncom2.Types;

namespace sul.Hncom2
{

    public class Uncompressed : Packet
    {

        public const byte Id = 1;

        public const bool Clientbound = true;
        public const bool Serverbound = true;

        public byte[][] packets;

        public Uncompressed() {}

        public Uncompressed(byte[][] packets)
        {
            this.packets = packets;
        }

        public override int GetId()
        {
            return Id;
        }

        public override byte[] Encode()
        {
            return this._buffer;
        }

        public override void Decode(byte[] buffer)
        {
            this._buffer = buffer;
        }

        public static Uncompressed FromBuffer(byte[] buffer)
        {
            var ret = new Uncompressed();
            ret.decode(buffer);
            return ret;
        }

    }

    public class Compressed : Packet
    {

        public const byte Id = 2;

        public const bool Clientbound = true;
        public const bool Serverbound = true;

        public uint size;
        public byte[] payload;

        public Compressed() {}

        public Compressed(uint size, byte[] payload)
        {
            this.size = size;
            this.payload = payload;
        }

        public override int GetId()
        {
            return Id;
        }

        public override byte[] Encode()
        {
            return this._buffer;
        }

        public override void Decode(byte[] buffer)
        {
            this._buffer = buffer;
        }

        public static Compressed FromBuffer(byte[] buffer)
        {
            var ret = new Compressed();
            ret.decode(buffer);
            return ret;
        }

    }

}
